---
version: '2.0'

name: project_create
description: Workbook that contains project_creation workflows

workflows:
  init:
    type: direct
    input:
      - id
      - name
      - description
      - enabled
      - owner
    output:
      id: <% $.project_id %>
      name: <% $.name %>
      description: <% $.description %>
      enabled: <% $.enabled %>
      owner: <% $.owner %>

    tasks:
      identity:
        workflow: identity
        input:
          id: <% $.id %>
          name: <% $.name %>
          domain: default
          description: <% $.description %>
          enabled: <% $.enabled %>
        publish:
          project_id: <% task(identity).result.id %>
        on-success:
          - service_initialize

      service_initialize:
        workflow: service_initialize.base
        input:
          id: <% $.project_id %>

  identity:
    description: Creates a Project, assigns the ownership/membership
    type: direct
    input:
      - id
      - name
      - description
      - enabled
      - owner
    output:
      id: <% $.project_id %>
      name: <% $.name %>
      description: <% $.description %>
      enabled: <% $.enabled %>
      owner: <% $.owner %>
    tasks:
      project_exists:
        action: keystone.projects_get project=<% $.id %>
        publish:
          project_id: <% task(project_exists).result.id %>
        on-success:
          - get_user_id
        on-error:
          - create_project

      create_project:
        action: keystone.projects_create
        input:
          id: <% $.id %>
          name: <% $.name %>
          domain: default
          description: <% $.description %>
          enabled: <% $.enabled %>
        publish:
          project_id: <% task(create_project).result.id %>
        on-success:
          - get_user_id

      get_user_id:
        action: keystone.users_find
        input:
          name: <% $.owner %>
        publish:
          owner_id: <% task(get_user_id).result.id %>
        on-success:
          - get_owner_role_id
          - get_member_role_id
          - set_fim_properties: <% not ('Personal' in $.name)  %>
          - set_personal_project_properties: <% 'Personal' in $.name  %>

      get_owner_role_id:
        action: keystone.roles_find
        input:
          name: 'owner'
        publish:
          owner_role_id: <% task(get_owner_role_id).result.id %>
        on-success:
          - set_project_owner

      get_member_role_id:
        action: keystone.roles_find
        input:
          name: 'Member'
        publish:
          member_role_id: <% task(get_member_role_id).result.id %>
        on-success:
          - set_project_member

      set_project_owner:
        action: keystone.roles_grant
        input:
          role: <% $.owner_role_id %>
          user: <% $.owner_id %>
          project: <% $.project_id %>

      set_project_member:
        action: keystone.roles_grant
        input:
          role: <% $.member_role_id %>
          user: <% $.owner_id %>
          project: <% $.project_id %>

      set_fim_properties:
        action: keystone.projects_update project=<% $.project_id %> fim-lock=true fim-skip=true

      set_personal_project_properties:
        action: keystone.projects_update project=<% $.project_id %> accounting-group='personal' type='personal'
