---
version: '2.0'

project_create:
  description: Creates a Project, assigns the ownership/membership, sets the default quotas and extra properties
  type: direct

  input:
    - id
    - name
    - description
    - enabled
    - owner

  output:
    id: <% $.project_id %>
    name: <% $.name %>
    description: <% $.description %>
    enabled: <% $.enabled %>
    owner: <% $.owner %>

  tasks:
    project_exists:
      action: keystone.projects_get project=<% $.id %>
      publish:
        project_id: <% task(project_exists).result.id %>
      on-success:
        - get_user_id
      on-error:
        - create_project

    create_project:
      action: keystone.projects_create
      input:
        id: <% $.id %>
        name: <% $.name %>
        domain: default
        description: <% $.description %>
        enabled: <% $.enabled %>
      publish:
        project_id: <% task(create_project).result.id %>
      on-success:
        - get_user_id

    get_user_id:
      action: keystone.users_find
      input:
        name: <% $.owner %>
      publish:
        owner_id: <% task(get_user_id).result.id %>
      on-success:
        - get_owner_role_id
        - get_member_role_id

    get_owner_role_id:
      action: keystone.roles_find
      input:
        name: 'owner'
      publish:
        owner_role_id: <% task(get_owner_role_id).result.id %>
      on-success:
        - set_project_owner

    get_member_role_id:
      action: keystone.roles_find
      input:
        name: 'Member'
      publish:
        member_role_id: <% task(get_member_role_id).result.id %>
      on-success:
        - set_project_member

   set_project_owner:
      action: keystone.roles_grant
      input:
        role: <% $.owner_role_id %>
        user: <% $.owner_id %>
        project: <% $.project_id %>
      on-success:
        - update_compute_quota

    set_project_member:
      action: keystone.roles_grant
      input:
        role: <% $.member_role_id %>
        user: <% $.owner_id %>
        project: <% $.project_id %>
      on-success:
        - update_compute_quota

    update_compute_quota:
      join: all
      action: nova.quotas_update
      input:
        tenant_id: <% $.project_id %>
        cores: 10
        ram: 20480
        instances: 5
      on-success:
        - update_volume_quota

    update_volume_quota:
      action: cinder.quotas_update
      input:
        tenant_id: <% $.project_id %>
        volumes: 10
        gigabytes: 100
        snapshots: 10
      on-success:
        - get_volume_types

    get_volume_types:
      action: cinder.volume_types_list
      publish:
        volume_type_names: <% task(get_volume_types).result.name %>
      on-success:
        - update_volume_quota_types

    update_volume_quota_types:
      with-items: vt_name in <% $.volume_type_names %>
      action: cinder.quotas_update tenant_id=<% $.project_id %> volumes_<% vt_name %>=10 gigabytes_<% vt_name %>=1000 snapshots_<% vt_name %>=10
      on-success:
        - set_fim_properties: <% not ('Personal' in $.name)  %>
        - set_personal_project_properties: <% 'Personal' in $.name  %>

    set_fim_properties:
      action: keystone.projects_update project=<% $.project_id %> fim-lock=true fim-skip=true

    set_personal_project_properties:
      action: keystone.projects_update project=<% $.project_id %> accounting-group='personal' type='personal'
