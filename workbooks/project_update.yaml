---
version: '2.0'

name: project_update
description: Workbook that contains project_update workflows

workflows:
  init:
    type: direct
    input:
      - id
      - name
      - description
      - enabled
      - owner
    output:
      id: <% $.id %>
      name: <% $.name %>
      description: <% $.description %>
      enabled: <% $.enabled %>
      owner: <% $.owner %>

    tasks:
      check_identity:
        workflow: check_identity
        input:
          id: <% $.id %>
        publish:
          fim_skip: <% task(check_identity).result.fim_skip %>
          current_enabled: <% task(check_identity).result.current_enabled %>
        on-success:
          # If project metadata has fim-skip=True, the project resources will not be affected
          - identity: <% $.fim_skip = null or $.fim_skip = "True" or $.current_enabled = false or $.enabled = true %>
          - service_shutdown: <% $.fim_skip = "False" and $.current_enabled = true and $.enabled = false %>
      
      service_shutdown:
        workflow: service_shutdown.init
        input:
          id: <% $.id %>
        on-success:
          - identity

      identity:
        workflow: identity
        input:
          id: <% $.id %>
          name: <% $.name %>
          description: <% $.description %>
          enabled: <% $.enabled %>
          owner: <% $.owner %>

  check_identity:
    description: Checks if the project can be updated
    type: direct
    input:
      - id
    output:
      fim_skip: <% $.fim_skip %>
      current_enabled: <% $.current_enabled %>
    tasks:
      retrieve_project:
        action: keystone.projects_get
        input:
          -project: <% $.id %>
        publish:
          fim_skip: <% task(retrieve_project).result.get("fim-skip") %>
          current_enabled: <% task(retrieve_project).result.get("enabled") %>

  identity:
    description: Updates the status of resources of a project on the identity service
    type: direct
    input:
      - id
      - name
      - description
      - enabled
      - owner
    tasks:
      update_keystone_data:
        action: keystone.projects_update
        input:
         project: <% $.id %>
         name: <% $.name  %>
         description: <% $.description  %>
         enabled: <% $.enabled %>
        on-success:
         - get_owner_role_id

      get_owner_role_id:
        action: keystone.roles_find
        input:
          name: 'owner'
        publish:
          owner_role_id: <% task(get_owner_role_id).result.id %>
        on-success:
          - get_project_owner

      get_project_owner:
        action: keystone.roles_grant
        input:
          role: <% $.owner_role_id %>
          project: <% $.id %>
        publish:
          owners: <% task(get_project_owner).result %>
        on-success:
          - remove_previous_owner: <% not ($.owner in $.owners)  %>

      remove_previous_owner:
        with-items: old_owner_id in <% $.owners %>
        action: keystone.roles_revoke
        input:
          role: <% $.owner_role_id %>
          user: <% $.old_owner_id %>
          project: <% $.id %>
        on-success:
          - set_project_owner

      set_project_owner:
        action: keystone.roles_grant
        input:
          role: <% $.owner_role_id %>
          user: <% $.owner_id %>
          project: <% $.id %>
