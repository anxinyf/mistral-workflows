---
version: '2.0'

name: service_delete
description: Workbook that contains the cleanup operations on services on a project

workflows:
  init:
    type: direct
    input:
      - id
    tasks:
      project_exists:
        action: keystone.projects_get project=<% $.id %>
        publish:
          project_id: <% task(project_exists).result.id %>
        on-success:
          - workengine
          - container_infra

      workengine:
        workflow: workengine
        input:
          id: <% $.id %>

      container_infra:
        workflow: container_infra
        input:
          id: <% $.id %>
        on-success:
          - orchestration
          - key_manager

      key_manager:
        workflow: key_manager
        input:
          id: <% $.id %>
        on-success:
          - compute

      orchestration:
        workflow: orchestration
        input:
          id: <% $.id %>
        on-success:
          - compute

      compute:
        join: all
        workflow: compute
        input:
          id: <% $.id %>
        on-success:
          - blockstorage
          - fileshare
          - network

      blockstorage:
        workflow: blockstorage
        input:
          id: <% $.id %>
        on-success:
          - image

      image:
        workflow: image
        input:
          id: <% $.id %>

      fileshare:
        workflow: fileshare
        input:
          id: <% $.id %>

      network:
        workflow: network
        input:
          id: <% $.id %>

  compute:
    description: Deletes all resources of a project on the compute service
    type: direct
    input:
      - id
    tasks:
      # Get all VMs in the project
      get_vms:
        action: nova.servers_list
        input:
          search_opts:
            all_tenants: true
            project_id: <% $.id %>
        publish:
          server_ids: <% task(get_vms).result.id %>
        on-success:
          - delete_vms
      # Delete the VMs
      delete_vms:
        with-items: server_id in <% $.server_ids %>
        action: nova.servers_delete server=<% $.server_id %>
        on-success:
          - quota_cleanup
      # Cleanup quota entries in nova
      quota_cleanup:
        action: nova.quotas_delete tenant_id=<% $.id %>

  blockstorage:
    description: Deletes all resources of a project on the blockstorage service
    type: direct
    input:
      - id
    tasks:
      # Get all volumes in the project
      get_volumes:
        action: cinder.volumes_list
        input:
          search_opts:
            all_tenants: true
            project_id: <% $.id %>
        publish:
          volume_ids: <% task(get_volumes).result.id %>
        on-success:
          - delete_volumes
      # Delete the volumes
      delete_volumes:
        with-items: volume_id in <% $.volume_ids %>
        action: cinder.volumes_delete volume=<% $.volume_id %>
        on-success:
          - quota_cleanup
      # Cleanup quota entries in cinder
      quota_cleanup:
        action: cinder.quotas_delete tenant_id=<% $.id %>

  image:
    description: Deletes all resources of a project on the image service
    type: direct
    input:
      - id
    tasks:
      empty_task:
        action: std.noop

  fileshare:
    description: Deletes all resources of a project on the fileshare service
    type: direct
    input:
      - id
    tasks:
      empty_task:
        action: std.noop

  orchestration:
    description: Deletes all resources of a project on the orchestration service
    type: direct
    input:
      - id
    tasks:
      empty_task:
        action: std.noop

  key_manager:
    description: Deletes all resources of a project on the key_manager service
    type: direct
    input:
      - id
    tasks:
      empty_task:
        action: std.noop

  network:
    description: Deletes all resources of a project on the network service
    type: direct
    input:
      - id
    tasks:
      empty_task:
        action: std.noop

  container_infra:
    description: Deletes all resources of a project on the container infrastructure service
    type: direct
    input:
      - id
    tasks:
      empty_task:
        action: std.noop

  workengine:
    description: Deletes all resources of a project on the workflow service
    type: direct
    input:
      - id
    tasks:
      empty_task:
        action: std.noop
