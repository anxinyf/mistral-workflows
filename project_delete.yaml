---
version: '2.0'

name: project_delete
description: Workbook that contains project_deletion workflows

workflows:
  init:
    type: direct
    input:
      - id
    output:
      id: <% $.id %>

    tasks:
      check_identity:
        workflow: check_identity
        input:
          - id: <% $.id %>
        publish:
          fim_lock: <% task(check_identity).result.get("fim-lock") %>
        on-success:
          - fail: <% $.fim_lock != null and $.fim_lock = true %>
          - workengine: <% $.fim_lock = null %>
      
      workengine:
        workflow: workengine
        input:
          id: <% $.id %>
        on-success:
          - container_infra

      container_infra:
        workflow: container_infra
        input:
          id: <% $.id %>
        on-success:
          - orchestration

      orchestration:
        workflow: orchestration
        input:
          id: <% $.id %>
        on-success:
          - compute

      compute:
        workflow: compute
        input:
          id: <% $.id %>
        on-success:
          - blockstorage
          - fileshare
          - network

      blockstorage:
        workflow: blockstorage
        input:
          id: <% $.id %>
        on-success:
          - image

      image:
        workflow: image
        input:
          id: <% $.id %>
        on-success:
          - identity

      fileshare:
        workflow: fileshare
        input:
          id: <% $.id %>
        on-success:
          - identity

      network:
        workflow: network
        input:
          id: <% $.id %>
        on-success:
          - identity

      identity:
        join: all
        workflow: identity
        input:
          - id: <% $.id %>

  check_identity:
    description: Checks if the project can be deleted
    type: direct
    input:
      - id: <% $.id %>
    output:
      - fim_skip
      - current_enabled
    tasks:
      retrieve_project:
        action: keystone.projects_get
        input:
          -project: <% $.id %>
        publish:
          fim_skip: <% task(retrieve_project).result.get("fim-skip") %>
          current_enabled: <% task(retrieve_project).result.get("enabled") %>

  compute:
    description: Deletes all resources of a project on the compute service
    type: direct
    input:
      - id
    tasks:
      # Get all VMs in the project
      get_vms:
        action: nova.servers_list
        input:
          search_opts:
            all_tenants: true
            project_id: <% $.id %>
        publish:
          server_ids: <% task(get_vms).result.id %>
        on-success:
          - delete_vms
      # Delete the VMs
      delete_vms:
        with-items: server_id in <% $.server_ids %>
          action: nova.servers_delete server=<% $.server_id %>

  blockstorage:
    description: Deletes all resources of a project on the blockstorage service
    type: direct
    input:
      - id
    tasks:
      # Get all volumes in the project
      get_volumes:
        action: cinder.volumes_list
        input:
          search_opts:
            all_tenants: true
            project_id: <% $.id %>
        publish:
          volume_ids: <% task(get_all_volumes).result.id %>
        on-success:
          - delete_volumes
      # Delete the volumes
      delete_volumes:
        with-items: volume_id in <% $.volume_ids %>
        action: cinder.volumes_delete volume=<% $.volume_id %>

  image:
    description: Deletes all resources of a project on the image service
    type: direct
    input:
      - id
    tasks:
      empty_task:
        action: std.echo output='skip'

  fileshare:
    description: Deletes all resources of a project on the fileshare service
    type: direct
    input:
      - id
    tasks:
      empty_task:
        action: std.echo output='skip'

  orchestration:
    description: Deletes all resources of a project on the orchestration service
    type: direct
    input:
      - id
    tasks:
      empty_task:
        action: std.echo output='skip'

  network:
    description: Deletes all resources of a project on the network service
    type: direct
    input:
      - id
    tasks:
      empty_task:
        action: std.echo output='skip'

  container_infra:
    description: Deletes all resources of a project on the container infrastructure service
    type: direct
    input:
      - id
    tasks:
      empty_task:
        action: std.echo output='skip'

  workengine:
    description: Deletes all resources of a project on the workflow service
    type: direct
    input:
      - id
    tasks:
      empty_task:
        action: std.echo output='skip'

  identity:
    description: Deletes all resources of a project on the identity service
    type: direct
    input:
      - id
    tasks:
      delete_project:
        action: keystone.projects_delete
        input:
          - project: <% $.id %>