---
version: '2.0'

name: project_update
description: Workbook that contains project_update workflows

workflows:
  init:
    type: direct
    input:
      - id
      - name
      - description
      - enabled
      - owner
    output:
      id: <% $.id %>
      name: <% $.name %>
      description: <% $.description %>
      enabled: <% $.enabled %>
      owner: <% $.owner %>

    tasks:
      check_identity:
        workflow: check_identity
        input:
          id: <% $.id %>
        publish:
          fim_skip: <% task(check_identity).result.fim_skip %>
          current_enabled: <% task(check_identity).result.current_enabled %>
        on-success:
          # If project metadata has fim-skip=True, the project resources will not be affected
          - identity: <% $.fim_skip = null or $.fim_skip = "True" or $.current_enabled = false or $.enabled = true %>
          - workengine: <% $.fim_skip = "False" and $.current_enabled = true and $.enabled = false %>
      
      workengine:
        workflow: workengine
        input:
          id: <% $.id %>
        on-success:
          - container_infra

      container_infra:
        workflow: container_infra
        input:
          id: <% $.id %>
        on-success:
          - orchestration

      orchestration:
        workflow: orchestration
        input:
          id: <% $.id %>
        on-success:
          - compute

      compute:
        workflow: compute
        input:
          id: <% $.id %>
        on-success:
          - blockstorage
          - fileshare
          - network

      blockstorage:
        workflow: blockstorage
        input:
          id: <% $.id %>
        on-success:
          - image

      image:
        workflow: image
        input:
          id: <% $.id %>
        on-success:
          - identity

      fileshare:
        workflow: fileshare
        input:
          id: <% $.id %>
        on-success:
          - identity

      network:
        workflow: network
        input:
          id: <% $.id %>
        on-success:
          - identity

      identity:
        join: all
        workflow: identity
        input:
          id: <% $.id %>
          name: <% $.name %>
          description: <% $.description %>
          enabled: <% $.enabled %>
          owner: <% $.owner %>

  check_identity:
    description: Checks if the project can be updated
    type: direct
    input:
      - id
    output:
      fim_skip: <% $.fim_skip %>
      current_enabled: <% $.current_enabled %>
    tasks:
      retrieve_project:
        action: keystone.projects_get
        input:
          -project: <% $.id %>
        publish:
          fim_skip: <% task(retrieve_project).result.get("fim-skip") %>
          current_enabled: <% task(retrieve_project).result.get("enabled") %>

  compute:
    description: Updates the status of resources of a project on the compute service
    type: direct
    input:
      - id
    tasks:
      stop_instances_get_vms:
        action: nova.servers_list
        input:
          search_opts:
            all_tenants: true
            project_id: <% $.id %>
        publish:
          server_ids: <% task(stop_instances_get_vms).result.id %>
        on-success:
          - stop_instances

      stop_instances:
        with-items: server_id in <% $.server_ids %>
        action: nova.servers_stop server=<% $.server_id %>

  blockstorage:
    description: Updates the status of resources of a project on the blockstorage service
    type: direct
    input:
      - id
    tasks:
      empty_task:
        action: std.echo output='skip'

  image:
    description: Updates the status of resources of a project on the image service
    type: direct
    input:
      - id
    tasks:
      empty_task:
        action: std.echo output='skip'

  fileshare:
    description: Updates the status of resources of a project on the fileshare service
    type: direct
    input:
      - id
    tasks:
      empty_task:
        action: std.echo output='skip'

  orchestration:
    description: Updates the status of resources of a project on the orchestration service
    type: direct
    input:
      - id
    tasks:
      empty_task:
        action: std.echo output='skip'

  network:
    description: Updates the status of resources of a project on the network service
    type: direct
    input:
      - id
    tasks:
      empty_task:
        action: std.echo output='skip'

  container_infra:
    description: Updates the status of resources of a project on the container infrastructure service
    type: direct
    input:
      - id
    tasks:
      empty_task:
        action: std.echo output='skip'

  workengine:
    description: Updates the status of resources of a project on the workflow service
    type: direct
    input:
      - id
    tasks:
      empty_task:
        action: std.echo output='skip'

  identity:
    description: Updates the status of resources of a project on the identity service
    type: direct
    input:
      - id
      - name
      - description
      - enabled
      - owner
    tasks:
      update_keystone_data:
        action: keystone.projects_update
        input:
         project: <% $.id %>
         name: <% $.name  %>
         description: <% $.description  %>
         enabled: <% $.enabled %>
        on-success:
         - get_owner_role_id

      get_owner_role_id:
        action: keystone.roles_find
        input:
          name: 'owner'
        publish:
          owner_role_id: <% task(get_owner_role_id).result.id %>
        on-success:
          - get_project_owner

      get_project_owner:
        action: keystone.roles_grant
        input:
          role: <% $.owner_role_id %>
          project: <% $.id %>
        publish:
          owners: <% task(get_project_owner).result %>
        on-success:
          - set_project_owner: <% not ($.owner in $.owners)  %>

      set_project_owner:
        action: keystone.roles_grant
        input:
          role: <% $.owner_role_id %>
          user: <% $.owner_id %>
          project: <% $.id %>